Project: Live Long and Prosper

1. Project Description:
- The project involves designing a search agent to help a town reach a prosperity level of 100.
- The town requires resources (food, materials, energy) for its citizens and for establishing new buildings.
- Buildings can be established to increase the town's prosperity, but they require resources.
- The search agent's task is to find a plan that will help the town reach a prosperity level of 100.
- Different actions can affect the prosperity and resources differently.
- The agent has a budget of 100,000 to spend and there is no additional source of income.
- There is a limit of 50 units per resource that can be stored in the town at any time.
- Resources deplete with every action the agent takes.
- Requesting a delivery can increase the level of a resource, but the increase is not immediate.
- The agent can only wait or build during the delay period following a delivery request.
- The agent can perform actions like requesting food, materials, or energy, waiting for a delivery, or building.
- Building actions (BUILD1, BUILD2) affect the town's prosperity level but consume resources and have an additional cost.
- If any resource or money reaches zero, no more actions are possible.
- Each action consumes one unit of each resource and spends an amount of money equal to the cost of the resources.
- The effects and parameters of actions are summarized in Table 1.

2. Actions:
- RequestFood, RequestMaterials, RequestEnergy: These actions request a delivery of a resource to the town. They increase the level of the resource by a certain amount.
- WAIT: This action allows the agent to wait for a delivery to arrive without building or requesting a new delivery.
- BUILD1, BUILD2: These actions affect the town's prosperity level. They consume resources and have an additional cost.

3. Implementation:
- The project requires implementing a search agent in Java.
- The agent should find a sequence of actions to help the town achieve prosperity level 100.
- Several search strategies should be implemented and compared based on runtime, number of expanded nodes, memory utilization, and CPU utilization.
- The implementation should include the following classes:
  - GenericSearch: Implements the generic implementation of a search problem.
  - LLAPSearch: Extends GenericSearch and implements the "Live Long and Prosper" search problem.
  - Node: Implements a search-tree node.
- The solve function in LLAPSearch is the key function for testing and finding a sequence of steps to help the town achieve prosperity.
- The initial state is provided as a string with the parameters of the problem instance.
- The solve function takes the initial state, search strategy, and visualize parameters.